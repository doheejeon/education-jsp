<%@ page language='java' contentType='text/html; charset=utf-8' pageEncoding='utf-8' %>
<a href='main.html'>메인</a> <!-- 쿠키생성은 서버에서한다. -->
<% //서버에있는 쿠키를 클라이언트에 줘야 클라이언트가 저장할수있다. ->쿠키전달방식: response로 보낸다.(서버에서 클라이언트로보내는데이터니까)
	Cookie cookie1 = new Cookie("name", "john");
	Cookie cookie2 = new Cookie("age", "12");
	
	response.addCookie(cookie1);
	response.addCookie(cookie2);
%>

<!-- 

서버에 저장하는데이터: 파라미터(폼,쿼리스트링으로 표현), 어트리뷰트
클라이이언트에 저장하는 데이터: 쿠키 
쿠키는 데이터를 클라이언트에 저장한다. 
브라우저가 사용하는 자신만의 디렉토리에 txt파일형태로 저장한 데이터 를 뜻한다. 
클라이언트가 자신의디렉토리에txt파일형태로 저장한 데이터

클라이언트에서 서버로 데이터를보낼때 request로 보냈다.
서버에서 클라이언트에 데이터를 보낼때 response로 보냈다.
html코드가 주고 바이너리데이터를 넣어서(이미지,소리 영상등등)
서버에서 리스판스에 데이터를 집어넣는방법: out.write(), out.print()메소드 이용.
리스판스에 URL을 집어넣은방법: redirect를 이용 

7,8 > 3. 쿠키를 리스판스에 집어넣어보겠다 . "addCookie' 메소드 이용 

그리고 그 리스판스를 클라이언트에 보내는것은 톰캣이 담당한다. 

브라우저창에서 확인해보면, 내가 정해놓은 쿠키의정보뿐만아니라, context path이후의 정보도 들어가있다. 
	Max-age : 쿠키의 맥스에이지. =언제까지 살아있을것인지. session: 세션이 유지되는동안 살아있다. =로그아웃이나 창닫기하면 쿠키도사라짐
	쿠키네임, 쿠키밸류, path, scope(가끔) 이렇게 3가지를 앞으로 신경써야한다. 
	
	JsessionId :내가 만들지않았지만 서버에서 리스판스받아서 생성된쿠키
			용도: 세션아이디 값. 
			각 세션객체 전용아이디가생겨서 톰캣이 그것만 사용한다.(데이터 재활용)
세션스콥 보다 객체를 더 오래 보존할 수 있는 방법(어플레키에션은 변질위험성이있어서비추)이 바로 " 쿠키" 에 저장하는 것 
		특별히 정해주지않으면 기본값은 세션이다. 
	
			
*저장해둔 쿠키는 리퀘스트 보낼때 쓰인다.
	
 -->